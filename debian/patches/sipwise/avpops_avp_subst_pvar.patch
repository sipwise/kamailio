From: Sipwise Development Team <support@sipwise.com>
Date: Wed, 24 Feb 2021 11:20:05 +0100
Subject: avpops_avp_subst_pvar

---
 src/modules/avpops/avpops.c | 63 +++++++++++++++++++++++++++++++++------------
 1 file changed, 46 insertions(+), 17 deletions(-)

diff --git a/src/modules/avpops/avpops.c b/src/modules/avpops/avpops.c
index 0805407..2be98f3 100644
--- a/src/modules/avpops/avpops.c
+++ b/src/modules/avpops/avpops.c
@@ -67,6 +67,7 @@ static int fixup_pushto_avp(void** param, int param_no);
 static int fixup_check_avp(void** param, int param_no);
 static int fixup_op_avp(void** param, int param_no);
 static int fixup_subst(void** param, int param_no);
+static int fixup_free_subst(void** param, int param_no);
 static int fixup_is_avp_set(void** param, int param_no);
 
 static int w_print_avps(struct sip_msg* msg, char* foo, char *bar);
@@ -80,7 +81,7 @@ static int w_copy_avps(struct sip_msg* msg, char* param, char *check);
 static int w_pushto_avps(struct sip_msg* msg, char* destination, char *param);
 static int w_check_avps(struct sip_msg* msg, char* param, char *check);
 static int w_op_avps(struct sip_msg* msg, char* param, char *op);
-static int w_subst(struct sip_msg* msg, char* src, char *subst);
+static int w_subst(struct sip_msg* msg, char* src, char *subst_param);
 static int w_is_avp_set(struct sip_msg* msg, char* param, char *foo);
 
 /*! \brief
@@ -109,7 +110,7 @@ static cmd_export_t cmds[] = {
 		REQUEST_ROUTE|FAILURE_ROUTE|BRANCH_ROUTE|ONREPLY_ROUTE|LOCAL_ROUTE},
 	{"avp_op",     (cmd_function)w_op_avps, 2, fixup_op_avp, 0,
 		REQUEST_ROUTE|FAILURE_ROUTE|BRANCH_ROUTE|ONREPLY_ROUTE|LOCAL_ROUTE},
-	{"avp_subst",  (cmd_function)w_subst,   2, fixup_subst, 0,
+	{"avp_subst",  (cmd_function)w_subst,   2, fixup_subst, fixup_free_subst,
 		REQUEST_ROUTE|FAILURE_ROUTE|BRANCH_ROUTE|ONREPLY_ROUTE|LOCAL_ROUTE},
 	{"is_avp_set", (cmd_function)w_is_avp_set, 1, fixup_is_avp_set, 0,
 		REQUEST_ROUTE|FAILURE_ROUTE|BRANCH_ROUTE|ONREPLY_ROUTE|LOCAL_ROUTE},
@@ -710,8 +711,6 @@ static int fixup_check_avp(void** param, int param_no)
 
 static int fixup_subst(void** param, int param_no)
 {
-	struct subst_expr* se;
-	str subst;
 	struct fis_param *ap;
 	struct fis_param **av;
 	char *s;
@@ -824,23 +823,26 @@ static int fixup_subst(void** param, int param_no)
 		}
 		*param=(void*)av;
 	} else if (param_no==2) {
-		LM_DBG("%s fixing %s\n", exports.name, (char*)(*param));
-		subst.s=*param;
-		subst.len=strlen(*param);
-		se=subst_parser(&subst);
-		if (se==0){
-			LM_ERR("%s: bad subst re %s\n",exports.name, (char*)*param);
-			return E_BAD_RE;
+		if (strncmp((char*)*param, "/", 1) == 0) // static subst string
+		{
+			LM_DBG("%s static subst string: %s\n", exports.name, (char*)*param);
+			return fix_param(FPARAM_SUBST, param);
 		}
-		/* don't free string -- needed for specifiers */
-		/* pkg_free(*param); */
-		/* replace it with the compiled subst. re */
-		*param=se;
+		LM_DBG("%s dynamic avp subst: %s\n", exports.name, (char*)*param);
+		return fixup_var_str_2(param, param_no);
 	}
 
 	return 0;
 }
 
+static int fixup_free_subst(void** param, int param_no)
+{
+	if (param_no==2)
+		fparam_free_restore(param);
+
+	return 0;
+}
+
 static int fixup_op_avp(void** param, int param_no)
 {
 	struct fis_param *ap;
@@ -1049,9 +1051,36 @@ static int w_op_avps(struct sip_msg* msg, char* param, char *op)
 								(struct fis_param*)op);
 }
 
-static int w_subst(struct sip_msg* msg, char* src, char *subst)
+static int w_subst(struct sip_msg* msg, char* src, char *subst_param)
 {
-	return ops_subst(msg, (struct fis_param**)src, (struct subst_expr*)subst);
+	str subst;
+	struct subst_expr* se;
+	fparam_t *fp;
+
+	fp = (fparam_t*)subst_param;
+
+	if (fp->type == FPARAM_SUBST) // already precompiled subst
+	{
+		se = fp->v.subst;
+		return ops_subst(msg, (struct fis_param**)src, se);
+	}
+
+	if (get_str_fparam(&subst, msg, fp) != 0)
+	{
+		LM_ERR("error fetching subst re");
+		return -1;
+	}
+
+	LM_DBG("%s preparing %s\n", exports.name, subst.s);
+
+	se=subst_parser(&subst);
+	if (se==0)
+	{
+		LM_ERR("%s: bad subst re %s\n", exports.name, subst.s);
+		return E_BAD_RE;
+	}
+
+	return ops_subst(msg, (struct fis_param**)src, se);
 }
 
 static int w_is_avp_set(struct sip_msg* msg, char* param, char *op)
