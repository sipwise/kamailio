--- a/src/modules/db_redis/redis_dbase.c
+++ b/src/modules/db_redis/redis_dbase.c
@@ -1688,11 +1688,7 @@
         if (tmp)
             db_redis_key_free(&tmp);
 
-        // skip if delete all rows
-        if (!*manual_keys_count) {
-          db_redis_key_free (&query_v);
-          goto skipkeys;
-        }
+	LM_ERR("XXXXXXXXXXXXXXXX manual keys: %i\n", *manual_keys_count);
 
         if (db_redis_key_prepend_string(&query_v, "HMGET", 5) != 0) {
             LM_ERR("Failed to set hmget command to pre-delete query\n");
@@ -1704,6 +1700,11 @@
             int idx = (*manual_keys)[j];
             str *col = _k[idx];
 
+	    LM_ERR("XXXXXXXXXXXXXXXX manual key %i: %.*s\n",
+			    j,
+			    col->len,
+			    col->s);
+
             if (db_redis_key_add_str(&query_v, col) != 0) {
                 LM_ERR("Failed to add manual key to pre-delete query\n");
                 goto error;
@@ -1785,7 +1786,6 @@
         db_vals = NULL;
         db_redis_free_reply(&reply);
 
-      skipkeys:
         if (db_redis_key_add_string(&query_v, "DEL", 3) != 0) {
             LM_ERR("Failed to add del command to delete query\n");
             goto error;
--- a/src/modules/usrloc/udomain.c
+++ b/src/modules/usrloc/udomain.c
@@ -1091,6 +1091,8 @@
 	db_val_t vals[3];
 	int key_num = 2;
 
+	LM_ERR("XXXXXXXXXXXXXXX db_timer_udomain\n");
+
 	/* call contact expired call back for a domain before deleting database rows */
 	udomain_contact_expired_cb(ul_dbh, _d);
 
@@ -1118,6 +1120,8 @@
 		return -1;
 	}
 
+	LM_ERR("doing delete: %i keys\n", key_num);
+
 	if (ul_dbf.delete(ul_dbh, keys, ops, vals, key_num) < 0) {
 		LM_ERR("failed to delete from table %s\n",_d->name->s);
 		return -1;
@@ -1214,6 +1218,8 @@
 	struct urecord* ptr, *t;
 	int i;
 
+	LM_ERR("XXXXXXXXXXXXXXX mem_timer_udomain\n");
+
 	for(i=istart; i<_d->size; i+=istep)
 	{
 		if(likely(destroy_modules_phase()==0)) lock_ulslot(_d, i);
