<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd" [
<!-- Include general documentation entities -->
<!ENTITY % docentities SYSTEM "../../../../doc/docbook/entities.xml">
%docentities;
]>
<!-- Module Developer's Guide -->
<chapter>
  <title>&develguide;</title>

  <section>
    <title>How to use</title>

    <para>Listing all possible functions here would be overkill and it is left
    to the developer to browse the varoius function prototypes in the source.
    It may however be valuable to give a few code snippets to show how to use
    this module. The API structure used to export the various functions looks
    as follows:</para>

    <programlisting>typedef struct {
struct cdp_binds *cdp;
cdp_avp_bind_basic_t basic;
cdp_avp_bind_base_data_format_t data;
cdp_avp_bind_base_avp_t base;
cdp_avp_bind_ccapp_avp_t ccapp;
cdp_avp_bind_nasapp_avp_t nasapp;
cdp_avp_bind_imsapp_avp_t imsapp;
cdp_avp_bind_epcapp_avp_t epcapp;
} cdp_avp_bind_t;</programlisting>
  </section>

  <section>
    <title>Reference Functions</title>

    <para>The Following is a list of functions for the various supported
    applications</para>

    <section>
      <title>nasapp</title>

      <para><programlisting>int nasapp.add_Accounting_Input_Octets(AAA_AVP_LIST *list,uint64_t data);
int nasapp.add_Accounting_Input_Packets(AAA_AVP_LIST *list,uint64_t data);
int nasapp.add_Accounting_Output_Octets(AAA_AVP_LIST *list,uint64_t data);
int nasapp.add_Accounting_Output_Packets(AAA_AVP_LIST *list,uint64_t data);
int nasapp.add_Called_Station_Id(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int nasapp.add_Filter_Id(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int nasapp.add_Framed_IP_Address(AAA_AVP_LIST *list,ip_address ip);
int nasapp.add_Framed_IPv6_Prefix(AAA_AVP_LIST *list,ip_address_prefix ip);
int nasapp.get_Accounting_Input_Octets(AAA_AVP_LIST list,uint64_t *data,AAA_AVP **avp_ptr);
int nasapp.get_Accounting_Input_Packets(AAA_AVP_LIST list,uint64_t *data,AAA_AVP **avp_ptr);
int nasapp.get_Accounting_Output_Octets(AAA_AVP_LIST list,uint64_t *data,AAA_AVP **avp_ptr);
int nasapp.get_Accounting_Output_Packets(AAA_AVP_LIST list,uint64_t *data,AAA_AVP **avp_ptr);
int nasapp.get_Called_Station_Id(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int nasapp.get_Filter_Id(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int nasapp.get_Framed_IP_Address(AAA_AVP_LIST list,ip_address *ip,AAA_AVP **avp_ptr);
int nasapp.get_Framed_IPv6_Prefix(AAA_AVP_LIST list,ip_address_prefix *ip,AAA_AVP **avp_ptr);
</programlisting></para>
    </section>

    <section>
      <title>imsapp</title>

      <para><programlisting>int imsapp.add_Associated_Identities(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_Associated_Registered_Identities(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_CableLabs_Digest_Algorithm(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_CableLabs_Digest_Auth_Param(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_CableLabs_Digest_Domain(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_CableLabs_Digest_HA1(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_CableLabs_Digest_QoP(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_CableLabs_Digest_Realm(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_CableLabs_SIP_Digest_Authenticate(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_Charging_Information(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_Confidentiality_Key(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Contact(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Current_Location(AAA_AVP_LIST *list,int32_t data);
int imsapp.add_Data_Reference(AAA_AVP_LIST *list,int32_t data);
int imsapp.add_Deregistration_Reason(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_DSAI_Tag(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_Algorithm(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_Auth_Param(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_CNonce(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_Domain(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_Entity_Body_Hash(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_HA1(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_Method(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_Nextnonce(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_Nonce(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_Nonce_Count(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_Opaque(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_QoP(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_Realm(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_Response(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_Response_Auth(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_Stale(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_URI(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Digest_Username(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_Line_Identifier(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_ETSI_SIP_Authenticate(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_ETSI_SIP_Authentication_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_ETSI_SIP_Authorization(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_Expiry_Time(AAA_AVP_LIST *list,time_t data);
int imsapp.add_Feature_List(AAA_AVP_LIST *list,uint32_t data);
int imsapp.add_Feature_List_ID(AAA_AVP_LIST *list,uint32_t data);
int imsapp.add_From_SIP_Header(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Identity_Set(AAA_AVP_LIST *list,int32_t data);
int imsapp.add_Integrity_Key(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Loose_Route_Indication(AAA_AVP_LIST *list,int32_t data);
int imsapp.add_Mandatory_Capability(AAA_AVP_LIST *list,uint32_t data);
int imsapp.add_MSISDN(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Multiple_Registration_Indication(AAA_AVP_LIST *list,int32_t data);
int imsapp.add_Optional_Capability(AAA_AVP_LIST *list,uint32_t data);
int imsapp.add_Originating_Request(AAA_AVP_LIST *list,int32_t data);
int imsapp.add_Path(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Primary_Charging_Collection_Function_Name(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Primary_Event_Charging_Function_Name(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Public_Identity(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Reason_Code(AAA_AVP_LIST *list,int32_t data);
int imsapp.add_Reason_Info(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Record_Route(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Requested_Domain(AAA_AVP_LIST *list,int32_t data);
int imsapp.add_Restoration_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_SCSCF_Restoration_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_Secondary_Charging_Collection_Function_Name(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Secondary_Event_Charging_Function_Name(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Send_Data_Indication(AAA_AVP_LIST *list,int32_t data);
int imsapp.add_Server_Assignment_Type(AAA_AVP_LIST *list,int32_t data);
int imsapp.add_Server_Capabilities(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_Server_Name(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Service_Indication(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_SIP_Auth_Data_Item(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_SIP_Authenticate(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_SIP_Authentication_Context(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_SIP_Authentication_Scheme(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_SIP_Authorization(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_SIP_Digest_Authenticate(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_SIP_Item_Number(AAA_AVP_LIST *list,uint32_t data);
int imsapp.add_SIP_Number_Auth_Items(AAA_AVP_LIST *list,uint32_t data);
int imsapp.add_Subscription_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_Subs_Req_Type(AAA_AVP_LIST *list,int32_t data);
int imsapp.add_Supported_Applications(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_Supported_Features(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_Supported_Features_Group(AAA_AVP_LIST *list,uint32_t Vendor_Id,uint32_t Feature_List_ID,uint32_t Feature_List);
int imsapp.add_To_SIP_Header(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_UAR_Flags(AAA_AVP_LIST *list,uint32_t data);
int imsapp.add_User_Authorization_Type(AAA_AVP_LIST *list,int32_t data);
int imsapp.add_User_Data_Already_Available(AAA_AVP_LIST *list,int32_t data);
int imsapp.add_User_Data_Cx(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_User_Data_Sh(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_User_Identity(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int imsapp.add_Visited_Network_Identifier(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Wildcarded_IMPU(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.add_Wildcarded_PSI(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int imsapp.get_Associated_Identities(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_Associated_Registered_Identities(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_CableLabs_Digest_Algorithm(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_CableLabs_Digest_Auth_Param(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_CableLabs_Digest_Domain(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_CableLabs_Digest_HA1(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_CableLabs_Digest_QoP(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_CableLabs_Digest_Realm(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_CableLabs_SIP_Digest_Authenticate(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_Charging_Information(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_Confidentiality_Key(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Contact(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Current_Location(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Data_Reference(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Deregistration_Reason(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_DSAI_Tag(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_Algorithm(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_Auth_Param(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_CNonce(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_Domain(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_Entity_Body_Hash(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_HA1(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_Method(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_Nextnonce(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_Nonce(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_Nonce_Count(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_Opaque(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_QoP(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_Realm(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_Response(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_Response_Auth(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_Stale(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_URI(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Digest_Username(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_Line_Identifier(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_SIP_Authenticate(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_SIP_Authentication_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_ETSI_SIP_Authorization(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_Expiry_Time(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Feature_List(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Feature_List_ID(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_From_SIP_Header(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Identity_Set(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Integrity_Key(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Loose_Route_Indication(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Mandatory_Capability(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_MSISDN(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Multiple_Registration_Indication(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Optional_Capability(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Originating_Request(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Path(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Primary_Charging_Collection_Function_Name(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Primary_Event_Charging_Function_Name(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Public_Identity(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Reason_Code(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Reason_Info(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Record_Route(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Requested_Domain(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Restoration_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_SCSCF_Restoration_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_Secondary_Charging_Collection_Function_Name(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Secondary_Event_Charging_Function_Name(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Send_Data_Indication(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Server_Assignment_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Server_Capabilities(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_Server_Name(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Service_Indication(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_SIP_Auth_Data_Item(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_SIP_Authenticate(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_SIP_Authentication_Context(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_SIP_Authentication_Scheme(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_SIP_Authorization(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_SIP_Digest_Authenticate(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_SIP_Item_Number(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_SIP_Number_Auth_Items(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Subscription_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_Subs_Req_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_Supported_Applications(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_Supported_Features(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_Supported_Features_Group(AAA_AVP_LIST list,uint32_t *Vendor_Id,uint32_t *Feature_List_ID,uint32_t *Feature_List,AAA_AVP **avp_ptr);
int imsapp.get_To_SIP_Header(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_UAR_Flags(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_User_Authorization_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_User_Data_Already_Available(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int imsapp.get_User_Data_Cx(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_User_Data_Sh(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_User_Identity(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int imsapp.get_Visited_Network_Identifier(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Wildcarded_IMPU(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int imsapp.get_Wildcarded_PSI(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
</programlisting></para>
    </section>

    <section>
      <title>epcapp</title>

      <para><programlisting>int epcapp.add_3GPP2_MEID(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_3GPP_AAA_Server_Name(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_3GPP_Charging_Id(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_3GPP_MS_TimeZone(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_3GPP_PDP_Type(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_3GPP_SGSN_Address(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_3GPP_SGSN_IPv6_Address(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_3GPP_SGSN_MCC_MNC(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_3GPP_User_Location_Info(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Abort_Cause(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Acceptable_Service_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Access_Network_Charging_Address(AAA_AVP_LIST *list,ip_address data);
int epcapp.add_Access_Network_Charging_Identifier(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Access_Network_Charging_Identifier_Gx(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Access_Network_Charging_Identifier_Value(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Access_Restriction_Data(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_AF_Application_Identifier(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_AF_Charging_Identifier(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_AF_Correlation_Information(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Alert_Reason(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_All_APN_Configurations_Included_Indicator(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Allocation_Retention_Priority(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_AMBR(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_AMBR_Group(AAA_AVP_LIST *list,uint32_t Max_Requested_Bandwidth_UL,uint32_t Max_Requested_Bandwidth_DL);
int epcapp.add_AN_GW_Address(AAA_AVP_LIST *list,ip_address data);
int epcapp.add_ANID(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_APN_Aggregate_Max_Bitrate_DL(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_APN_Aggregate_Max_Bitrate_UL(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_APN_Configuration(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_APN_Configuration_Profile(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_APN_OI_Replacement(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Application_Provided_Called_Party_Address(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Application_Server(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Application_Server_Information(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Authentication_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Authorized_QoS(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_AUTN(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Bearer_Control_Mode(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Bearer_Identifier(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Bearer_Operation(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Bearer_Usage(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Call_Barring_Infor_List(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Called_Asserted_Identity(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Called_Party_Address(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Calling_Party_Address(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Cancellation_Type(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Cause_Code(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Charging_Rule_Base_Name(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Charging_Rule_Definition(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Charging_Rule_Install(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Charging_Rule_Name(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Charging_Rule_Remove(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Charging_Rule_Report(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Client_Identity(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_CoA_Information(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_CoA_IP_Address(AAA_AVP_LIST *list,ip_address data);
int epcapp.add_Codec_Data(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Complete_Data_List_Included_Indicator(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Content_Disposition(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Content_Length(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Content_Size(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Content_Type(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Context_Identifier(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_CSG_Id(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_CSG_Subscription_Data(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Default_EPS_Bearer_QoS(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_DSA_Flags(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_DSR_Flags(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Early_Media_Description(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_EPS_Subscribed_QoS_Profile(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Equipment_Status(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_E_UTRAN_Vector(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Event(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Event_Report_Indication(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Event_Trigger(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Event_Type(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Expiration_Date(AAA_AVP_LIST *list,time_t data);
int epcapp.add_Expires(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_External_Client(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Flow_Description(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Flow_Information(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Flow_Label(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Flow_Number(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Flows(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Flow_Status(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Flow_Usage(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_GERAN_Vector(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_GG_Enforce(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_GG_Enforce_Group(AAA_AVP_LIST * avpList, str imsi, ip_address ue_ip, ip_address gg_ip, AVPDataStatus status);
int epcapp.add_GG_IP(AAA_AVP_LIST *list,ip_address data);
int epcapp.add_GGSN_Address(AAA_AVP_LIST *list,ip_address data);
int epcapp.add_GMLC_Address(AAA_AVP_LIST *list,ip_address data);
int epcapp.add_GMLC_Number(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_GMLC_Restriction(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_GPRS_Subscription_Data(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Guaranteed_Bitrate_DL(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Guaranteed_Bitrate_UL(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Homogenous_Support_of_IMS_Over_PS_Sessions(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_HPLMN_ODB(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_ICS_Indicator(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_IDA_Flags(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_IDR_Flags(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_IMEI(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Immediate_Response_Preferred(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_IMS_Charging_Identifier(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_IMS_Information(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_IMS_Voice_Over_PS_Sessions_Supported(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Inter_Operator_Identifier(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_IP_CAN_Type(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Item_Number(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_KASME(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Kc(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Last_UE_Activity_Time(AAA_AVP_LIST *list,time_t data);
int epcapp.add_LCS_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_LCS_Privacy_Exception(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Local_Sequence_Number(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Max_Requested_Bandwidth_DL(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Max_Requested_Bandwidth_UL(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Media_Component_Description(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Media_Component_Number(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Media_Initiator_Flag(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Media_Initiator_Party(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Media_Sub_Component(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Media_Type(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Message_Body(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Metering_Method(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_MO_LR(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Network_Access_Mode(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Network_Request_Support(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Node_Functionality(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Non_3GPP_IP_Access(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Non_3GPP_IP_Access_APN(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Non_3GPP_User_Data(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_NOR_Flags(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Notification_To_UE_User(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Number_Of_Requested_Vectors(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Offline(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_OMC_Id(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Online(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Operator_Determined_Barring(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Originating_IOI(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Originator(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Outgoing_Session_Id(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Packet_Filter_Content(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Packet_Filter_Identifier(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Packet_Filter_Information(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Packet_Filter_Operation(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_PCC_Rule_Status(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_PDN_Connection_ID(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_PDN_Gw_Address(AAA_AVP_LIST *list,ip_address data);
int epcapp.add_PDN_Gw_Allocation_Type(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_PDN_Gw_Identity(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_PDN_Gw_Name(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_PDN_Type(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_PDP_Context(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_PDP_Type(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_PLMN_Client(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Precedence(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Pre_emption_Capability(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Pre_emption_Vulnerability(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Priority_Level(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_PS_Information(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_PUA_Flags(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_QoS_Class_Identifier(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_QoS_Information(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_QoS_Negotiation(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_QoS_Profile_Name(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_QoS_Rule_Definition(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_QoS_Rule_Install(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_QoS_Rule_Name(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_QoS_Rule_Remove(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_QoS_Rule_Report(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_QoS_Subscribed(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_QoS_Upgrade(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_RAI(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_RAND(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_RAT_Frequency_Selection_Priority_ID(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_RAT_Type(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Regional_Subscription_Zone_Code(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Reporting_Level(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Requested_EUTRAN_Authentication_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Requested_Party_Address(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Requested_UTRAN_GERAN_Authentication_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Reservation_Priority(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Resource_Allocation_Notification(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Re_Synchronization_Info(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Revalidation_Time(AAA_AVP_LIST *list,time_t data);
int epcapp.add_Roaming_Restricted_Due_To_Unsupported_Feature(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Role_Of_Node(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_RR_Bandwidth(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_RS_Bandwidth(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Rule_Activation_Time(AAA_AVP_LIST *list,time_t data);
int epcapp.add_Rule_DeActivation_Time(AAA_AVP_LIST *list,time_t data);
int epcapp.add_Rule_Failure_Code(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_SDP_Answer_TimeStamp(AAA_AVP_LIST *list,time_t data);
int epcapp.add_SDP_Media_Component(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_SDP_Media_Description(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_SDP_Media_Name(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_SDP_Offer_TimeStamp(AAA_AVP_LIST *list,time_t data);
int epcapp.add_SDP_Session_Description(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_SDP_TimeStamps(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_SDP_Type(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Security_Parameter_Index(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Served_Party_IP_Address(AAA_AVP_LIST *list,ip_address data);
int epcapp.add_Service_Data_Container(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Service_ID(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Service_Information(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Service_Info_Status(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Service_Specific_Data(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Service_Specific_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Service_Specific_Type(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Service_Type(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Service_URN(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Session_Linking_Indicator(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Session_Release_Cause(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Sevice_Type_Identity(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_SGSN_Address(AAA_AVP_LIST *list,ip_address data);
int epcapp.add_SGSN_Number(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_SIP_Forking_Indication(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_SIP_Method(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_SIP_Request_Timestamp(AAA_AVP_LIST *list,time_t data);
int epcapp.add_SIP_Request_Timestamp_Fraction(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_SIP_Response_Timestamp(AAA_AVP_LIST *list,time_t data);
int epcapp.add_SIP_Response_Timestamp_Fraction(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Software_Version(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Specific_Action(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Specific_APN_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_SRES(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_SS_Code(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_SS_Status(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_STN_SR(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Subscriber_Status(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Subscription_Data(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Teleservice_List(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Terminal_Information(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Terminating_IOI(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_TFT_Filter(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_TFT_Packet_Filter_Information(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_TGPP_RAT_Type(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Time_First_Usage(AAA_AVP_LIST *list,time_t data);
int epcapp.add_Time_Last_Usage(AAA_AVP_LIST *list,time_t data);
int epcapp.add_Time_Stamps(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Time_Usage(AAA_AVP_LIST *list,time_t data);
int epcapp.add_ToS_Traffic_Class(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Trace_Collection_Entity(AAA_AVP_LIST *list,ip_address data);
int epcapp.add_Trace_Data(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Trace_Depth(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_Trace_Event_List(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Trace_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Trace_Interface_List(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Trace_NE_Type_List(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Trace_Reference(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_TS_Code(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Tunnel_Header_Filter(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_Tunnel_Header_Length(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_Tunnel_Information(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_UE_Locator(AAA_AVP_LIST *list,ip_address data);
int epcapp.add_UE_Locator_Id_Group(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_ULA_Flags(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_ULR_Flags(AAA_AVP_LIST *list,uint32_t data);
int epcapp.add_User_Id(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_User_Session_Id(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_UTRAN_Vector(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int epcapp.add_Visited_PLMN_Id(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.add_VPLMN_Dynamic_Address_Allowed(AAA_AVP_LIST *list,int32_t data);
int epcapp.add_XRES(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int epcapp.get_3GPP2_MEID(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_3GPP_AAA_Server_Name(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_3GPP_Charging_Id(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_3GPP_MS_TimeZone(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_3GPP_PDP_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_3GPP_SGSN_Address(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_3GPP_SGSN_IPv6_Address(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_3GPP_SGSN_MCC_MNC(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_3GPP_User_Location_Info(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Abort_Cause(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Acceptable_Service_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Access_Network_Charging_Address(AAA_AVP_LIST list,ip_address *data,AAA_AVP **avp_ptr);
int epcapp.get_Access_Network_Charging_Identifier(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Access_Network_Charging_Identifier_Gx(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Access_Network_Charging_Identifier_Value(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Access_Restriction_Data(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_AF_Application_Identifier(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_AF_Charging_Identifier(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_AF_Correlation_Information(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Alert_Reason(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_All_APN_Configurations_Included_Indicator(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Allocation_Retention_Priority(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_AMBR(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_AMBR_Group(AAA_AVP_LIST list,uint32_t *Max_Requested_Bandwidth_UL,uint32_t *Max_Requested_Bandwidth_DL,AAA_AVP **avp_ptr);
int epcapp.get_AN_GW_Address(AAA_AVP_LIST list,ip_address *data,AAA_AVP **avp_ptr);
int epcapp.get_ANID(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_APN_Aggregate_Max_Bitrate_DL(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_APN_Aggregate_Max_Bitrate_UL(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_APN_Configuration(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_APN_Configuration_Profile(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_APN_OI_Replacement(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Application_Provided_Called_Party_Address(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Application_Server(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Application_Server_Information(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Authentication_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Authorized_QoS(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_AUTN(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Bearer_Control_Mode(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Bearer_Identifier(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Bearer_Operation(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Bearer_Usage(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Call_Barring_Infor_List(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Called_Asserted_Identity(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Called_Party_Address(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Calling_Party_Address(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Cancellation_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Cause_Code(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Charging_Rule_Base_Name(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Charging_Rule_Definition(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Charging_Rule_Install(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Charging_Rule_Name(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Charging_Rule_Remove(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Charging_Rule_Report(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Client_Identity(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_CoA_Information(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_CoA_IP_Address(AAA_AVP_LIST list,ip_address *data,AAA_AVP **avp_ptr);
int epcapp.get_Codec_Data(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Complete_Data_List_Included_Indicator(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Content_Disposition(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Content_Length(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Content_Size(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Content_Type(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Context_Identifier(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_CSG_Id(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_CSG_Subscription_Data(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Default_EPS_Bearer_QoS(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_DSA_Flags(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_DSR_Flags(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Early_Media_Description(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_EPS_Subscribed_QoS_Profile(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Equipment_Status(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_E_UTRAN_Vector(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Event(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Event_Report_Indication(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Event_Trigger(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Event_Type(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Expiration_Date(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Expires(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_External_Client(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Flow_Description(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Flow_Information(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Flow_Label(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Flow_Number(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Flows(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Flow_Status(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Flow_Usage(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_GERAN_Vector(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_GG_Enforce(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_GG_IP(AAA_AVP_LIST list,ip_address *data,AAA_AVP **avp_ptr);
int epcapp.get_GGSN_Address(AAA_AVP_LIST list,ip_address *data,AAA_AVP **avp_ptr);
int epcapp.get_GMLC_Address(AAA_AVP_LIST list,ip_address *data,AAA_AVP **avp_ptr);
int epcapp.get_GMLC_Number(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_GMLC_Restriction(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_GPRS_Subscription_Data(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Guaranteed_Bitrate_DL(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Guaranteed_Bitrate_UL(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Homogenous_Support_of_IMS_Over_PS_Sessions(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_HPLMN_ODB(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_ICS_Indicator(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_IDA_Flags(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_IDR_Flags(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_IMEI(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Immediate_Response_Preferred(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_IMS_Charging_Identifier(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_IMS_Information(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_IMS_Voice_Over_PS_Sessions_Supported(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Inter_Operator_Identifier(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_IP_CAN_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Item_Number(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_KASME(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Kc(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Last_UE_Activity_Time(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int epcapp.get_LCS_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_LCS_Privacy_Exception(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Local_Sequence_Number(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Max_Requested_Bandwidth_DL(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Max_Requested_Bandwidth_UL(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Media_Component_Description(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Media_Component_Number(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Media_Initiator_Flag(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Media_Initiator_Party(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Media_Sub_Component(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Media_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Message_Body(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Metering_Method(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_MO_LR(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Network_Access_Mode(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Network_Request_Support(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Node_Functionality(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Non_3GPP_IP_Access(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Non_3GPP_IP_Access_APN(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Non_3GPP_User_Data(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_NOR_Flags(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Notification_To_UE_User(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Number_Of_Requested_Vectors(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Offline(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_OMC_Id(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Online(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Operator_Determined_Barring(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Originating_IOI(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Originator(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Outgoing_Session_Id(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Packet_Filter_Content(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Packet_Filter_Identifier(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Packet_Filter_Information(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Packet_Filter_Operation(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_PCC_Rule_Status(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_PDN_Connection_ID(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_PDN_Gw_Address(AAA_AVP_LIST list,ip_address *data,AAA_AVP **avp_ptr);
int epcapp.get_PDN_Gw_Allocation_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_PDN_Gw_Identity(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_PDN_Gw_Name(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_PDN_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_PDP_Context(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_PDP_Type(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_PLMN_Client(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Precedence(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Pre_emption_Capability(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Pre_emption_Vulnerability(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Priority_Level(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_PS_Information(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_PUA_Flags(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_QoS_Class_Identifier(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_QoS_Information(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_QoS_Negotiation(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_QoS_Profile_Name(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_QoS_Rule_Definition(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_QoS_Rule_Install(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_QoS_Rule_Name(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_QoS_Rule_Remove(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_QoS_Rule_Report(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_QoS_Subscribed(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_QoS_Upgrade(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_RAI(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_RAND(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_RAT_Frequency_Selection_Priority_ID(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_RAT_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Regional_Subscription_Zone_Code(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Reporting_Level(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Requested_EUTRAN_Authentication_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Requested_Party_Address(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Requested_UTRAN_GERAN_Authentication_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Reservation_Priority(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Resource_Allocation_Notification(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Re_Synchronization_Info(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Revalidation_Time(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Roaming_Restricted_Due_To_Unsupported_Feature(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Role_Of_Node(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_RR_Bandwidth(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_RS_Bandwidth(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Rule_Activation_Time(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Rule_DeActivation_Time(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Rule_Failure_Code(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_SDP_Answer_TimeStamp(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int epcapp.get_SDP_Media_Component(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_SDP_Media_Description(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_SDP_Media_Name(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_SDP_Offer_TimeStamp(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int epcapp.get_SDP_Session_Description(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_SDP_TimeStamps(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_SDP_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Security_Parameter_Index(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Served_Party_IP_Address(AAA_AVP_LIST list,ip_address *data,AAA_AVP **avp_ptr);
int epcapp.get_Service_Data_Container(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Service_ID(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Service_Information(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Service_Info_Status(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Service_Specific_Data(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Service_Specific_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Service_Specific_Type(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Service_Type(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Service_URN(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Session_Linking_Indicator(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Session_Release_Cause(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Sevice_Type_Identity(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_SGSN_Address(AAA_AVP_LIST list,ip_address *data,AAA_AVP **avp_ptr);
int epcapp.get_SGSN_Number(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_SIP_Forking_Indication(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_SIP_Method(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_SIP_Request_Timestamp(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int epcapp.get_SIP_Request_Timestamp_Fraction(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_SIP_Response_Timestamp(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int epcapp.get_SIP_Response_Timestamp_Fraction(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Software_Version(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Specific_Action(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Specific_APN_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_SRES(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_SS_Code(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_SS_Status(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_STN_SR(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Subscriber_Status(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Subscription_Data(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Teleservice_List(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Terminal_Information(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Terminating_IOI(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_TFT_Filter(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_TFT_Packet_Filter_Information(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_TGPP_RAT_Type(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Time_First_Usage(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Time_Last_Usage(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Time_Stamps(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Time_Usage(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int epcapp.get_ToS_Traffic_Class(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Trace_Collection_Entity(AAA_AVP_LIST list,ip_address *data,AAA_AVP **avp_ptr);
int epcapp.get_Trace_Data(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Trace_Depth(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Trace_Event_List(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Trace_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Trace_Interface_List(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Trace_NE_Type_List(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Trace_Reference(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_TS_Code(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Tunnel_Header_Filter(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_Tunnel_Header_Length(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_Tunnel_Information(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_UE_Locator(AAA_AVP_LIST list,ip_address *data,AAA_AVP **avp_ptr);
int epcapp.get_UE_Locator_Id_Group(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_ULA_Flags(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_ULR_Flags(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_User_Id(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_User_Session_Id(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_UTRAN_Vector(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int epcapp.get_Visited_PLMN_Id(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int epcapp.get_VPLMN_Dynamic_Address_Allowed(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int epcapp.get_XRES(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
</programlisting></para>
    </section>

    <section>
      <title>ccapp</title>

      <para><programlisting>int ccapp.add_CC_Correlation_Id(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int ccapp.add_CC_Input_Octets(AAA_AVP_LIST *list,uint64_t data);
int ccapp.add_CC_Money(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int ccapp.add_CC_Output_Octets(AAA_AVP_LIST *list,uint64_t data);
int ccapp.add_CC_Request_Number(AAA_AVP_LIST *list,uint32_t data);
int ccapp.add_CC_Request_Type(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_CC_Service_Specific_Units(AAA_AVP_LIST *list,uint64_t data);
int ccapp.add_CC_Session_Failover(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_CC_Sub_Session_Id(AAA_AVP_LIST *list,uint64_t data);
int ccapp.add_CC_Time(AAA_AVP_LIST *list,uint32_t data);
int ccapp.add_CC_Total_Octets(AAA_AVP_LIST *list,uint64_t data);
int ccapp.add_CC_Unit_Type(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_Check_Balance_Result(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_Cost_Information(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int ccapp.add_Cost_Unit(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int ccapp.add_Credit_Control(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_Credit_Control_Failure_Handling(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_Currency_Code(AAA_AVP_LIST *list,uint32_t data);
int ccapp.add_Direct_Debiting_Failure_Handling(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_Exponent(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_Final_Unit_Action(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_Final_Unit_Indication(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int ccapp.add_Granted_Service_Unit(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int ccapp.add_G_S_U_Pool_Identifier(AAA_AVP_LIST *list,uint32_t data);
int ccapp.add_G_S_U_Pool_Reference(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int ccapp.add_Multiple_Services_Credit_Control(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int ccapp.add_Multiple_Services_Indicator(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_Rating_Group(AAA_AVP_LIST *list,uint32_t data);
int ccapp.add_Redirect_Address_Type(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_Redirect_Server(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int ccapp.add_Redirect_Server_Address(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int ccapp.add_Requested_Action(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_Requested_Service_Unit(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int ccapp.add_Restriction_Filter_Rule(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int ccapp.add_Service_Context_Id(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int ccapp.add_Service_Identifier(AAA_AVP_LIST *list,uint32_t data);
int ccapp.add_Service_Parameter_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int ccapp.add_Service_Parameter_Type(AAA_AVP_LIST *list,uint32_t data);
int ccapp.add_Service_Parameter_Value(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int ccapp.add_Subscription_Id(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int ccapp.add_Subscription_Id_Data(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int ccapp.add_Subscription_Id_Group(AAA_AVP_LIST *list,int32_t type,str data,AVPDataStatus data_do);
int ccapp.add_Subscription_Id_Type(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_Tariff_Change_Usage(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_Tariff_Time_Change(AAA_AVP_LIST *list,time_t data);
int ccapp.add_Unit_Value(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int ccapp.add_Used_Service_Unit(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int ccapp.add_User_Equipment_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int ccapp.add_User_Equipment_Info_Group(AAA_AVP_LIST *list,int32_t type,str data,AVPDataStatus data_do);
int ccapp.add_User_Equipment_Info_Type(AAA_AVP_LIST *list,int32_t data);
int ccapp.add_User_Equipment_Info_Value(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int ccapp.add_Validity_Time(AAA_AVP_LIST *list,uint32_t data);
int ccapp.add_Value_Digits(AAA_AVP_LIST *list,int64_t data);
int ccapp.get_CC_Correlation_Id(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int ccapp.get_CC_Input_Octets(AAA_AVP_LIST list,uint64_t *data,AAA_AVP **avp_ptr);
int ccapp.get_CC_Money(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int ccapp.get_CC_Output_Octets(AAA_AVP_LIST list,uint64_t *data,AAA_AVP **avp_ptr);
int ccapp.get_CC_Request_Number(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_CC_Request_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_CC_Service_Specific_Units(AAA_AVP_LIST list,uint64_t *data,AAA_AVP **avp_ptr);
int ccapp.get_CC_Session_Failover(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_CC_Sub_Session_Id(AAA_AVP_LIST list,uint64_t *data,AAA_AVP **avp_ptr);
int ccapp.get_CC_Time(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_CC_Total_Octets(AAA_AVP_LIST list,uint64_t *data,AAA_AVP **avp_ptr);
int ccapp.get_CC_Unit_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Check_Balance_Result(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Cost_Information(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int ccapp.get_Cost_Unit(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int ccapp.get_Credit_Control(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Credit_Control_Failure_Handling(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Currency_Code(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Direct_Debiting_Failure_Handling(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Exponent(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Final_Unit_Action(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Final_Unit_Indication(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int ccapp.get_Granted_Service_Unit(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int ccapp.get_G_S_U_Pool_Identifier(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_G_S_U_Pool_Reference(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int ccapp.get_Multiple_Services_Credit_Control(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int ccapp.get_Multiple_Services_Indicator(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Rating_Group(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Redirect_Address_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Redirect_Server(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int ccapp.get_Redirect_Server_Address(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int ccapp.get_Requested_Action(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Requested_Service_Unit(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int ccapp.get_Restriction_Filter_Rule(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int ccapp.get_Service_Context_Id(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int ccapp.get_Service_Identifier(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Service_Parameter_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int ccapp.get_Service_Parameter_Type(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Service_Parameter_Value(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int ccapp.get_Subscription_Id(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int ccapp.get_Subscription_Id_Data(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int ccapp.get_Subscription_Id_Group(AAA_AVP_LIST list,int32_t *type,str *data,AAA_AVP **avp_ptr);
int ccapp.get_Subscription_Id_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Tariff_Change_Usage(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Tariff_Time_Change(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Unit_Value(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int ccapp.get_Used_Service_Unit(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int ccapp.get_User_Equipment_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int ccapp.get_User_Equipment_Info_Group(AAA_AVP_LIST list,int32_t *type,str *data,AAA_AVP **avp_ptr);
int ccapp.get_User_Equipment_Info_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_User_Equipment_Info_Value(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int ccapp.get_Validity_Time(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int ccapp.get_Value_Digits(AAA_AVP_LIST list,int64_t *data,AAA_AVP **avp_ptr);
</programlisting></para>
    </section>

    <section>
      <title>base</title>

      <para><programlisting>int base.add_Accounting_Realtime_Required(AAA_AVP_LIST *list,int32_t data);
int base.add_Accounting_Record_Number(AAA_AVP_LIST *list,uint32_t data);
int base.add_Accounting_Record_Type(AAA_AVP_LIST *list,int32_t data);
int base.add_Accounting_Sub_Session_Id(AAA_AVP_LIST *list,uint64_t data);
int base.add_Acct_Application_Id(AAA_AVP_LIST *list,uint32_t data);
int base.add_Acct_Interim_Interval(AAA_AVP_LIST *list,uint32_t data);
int base.add_Acct_Multi_Session_Id(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Acct_Session_Id(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Auth_Application_Id(AAA_AVP_LIST *list,uint32_t data);
int base.add_Auth_Grace_Period(AAA_AVP_LIST *list,uint32_t data);
int base.add_Authorization_Lifetime(AAA_AVP_LIST *list,uint32_t data);
int base.add_Auth_Request_Type(AAA_AVP_LIST *list,int32_t data);
int base.add_Auth_Session_State(AAA_AVP_LIST *list,int32_t data);
int base.add_Class(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Destination_Host(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Destination_Realm(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Disconnect_Cause(AAA_AVP_LIST *list,int32_t data);
int base.add_E2E_Sequence(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Error_Message(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Error_Reporting_Host(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Event_Timestamp(AAA_AVP_LIST *list,time_t data);
int base.add_Experimental_Result(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int base.add_Experimental_Result_Code(AAA_AVP_LIST *list,uint32_t data);
int base.add_Experimental_Result_Group(AAA_AVP_LIST *list,uint32_t Vendor_Id,uint32_t Experimental_Result_Code);
int base.add_Failed_AVP(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int base.add_Firmware_Revision(AAA_AVP_LIST *list,uint32_t data);
int base.add_Host_IP_Address(AAA_AVP_LIST *list,ip_address data);
int base.add_Inband_Security_Id(AAA_AVP_LIST *list,uint32_t data);
int base.add_MIP6_Agent_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int base.add_MIP6_Feature_Vector(AAA_AVP_LIST *list,uint64_t data);
int base.add_MIP6_Home_Link_Prefix(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_MIP_Home_Agent_Address(AAA_AVP_LIST *list,ip_address data);
int base.add_MIP_Home_Agent_Host(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int base.add_Multi_Round_Time_Out(AAA_AVP_LIST *list,uint32_t data);
int base.add_Origin_Host(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Origin_Realm(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Origin_State_Id(AAA_AVP_LIST *list,uint32_t data);
int base.add_Product_Name(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Proxy_Host(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Proxy_Info(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int base.add_Proxy_State(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Re_Auth_Request_Type(AAA_AVP_LIST *list,int32_t data);
int base.add_Redirect_Host(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Redirect_Host_Usage(AAA_AVP_LIST *list,int32_t data);
int base.add_Redirect_Max_Cache_Time(AAA_AVP_LIST *list,uint32_t data);
int base.add_Result_Code(AAA_AVP_LIST *list,uint32_t data);
int base.add_Route_Record(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Service_Selection(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Session_Binding(AAA_AVP_LIST *list,uint32_t data);
int base.add_Session_Id(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Session_Server_Failover(AAA_AVP_LIST *list,int32_t data);
int base.add_Session_Timeout(AAA_AVP_LIST *list,uint32_t data);
int base.add_Supported_Vendor_Id(AAA_AVP_LIST *list,uint32_t data);
int base.add_Termination_Cause(AAA_AVP_LIST *list,int32_t data);
int base.add_User_Name(AAA_AVP_LIST *list,str data,AVPDataStatus data_do);
int base.add_Vendor_Id(AAA_AVP_LIST *list,uint32_t data);
int base.add_Vendor_Specific_Application_Id(AAA_AVP_LIST *list,AAA_AVP_LIST* data,AVPDataStatus data_do);
int base.add_Vendor_Specific_Application_Id_Group(AAA_AVP_LIST *list,uint32_t vendor_id,uint32_t auth_app_id,uint32_t acct_app_id);
int base.get_Accounting_Realtime_Required(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int base.get_Accounting_Record_Number(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Accounting_Record_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int base.get_Accounting_Sub_Session_Id(AAA_AVP_LIST list,uint64_t *data,AAA_AVP **avp_ptr);
int base.get_Acct_Application_Id(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Acct_Interim_Interval(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Acct_Multi_Session_Id(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Acct_Session_Id(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Auth_Application_Id(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Auth_Grace_Period(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Authorization_Lifetime(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Auth_Request_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int base.get_Auth_Session_State(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int base.get_Class(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Destination_Host(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Destination_Realm(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Disconnect_Cause(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int base.get_E2E_Sequence(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Error_Message(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Error_Reporting_Host(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Event_Timestamp(AAA_AVP_LIST list,time_t *data,AAA_AVP **avp_ptr);
int base.get_Experimental_Result(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int base.get_Experimental_Result_Code(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Experimental_Result_Group(AAA_AVP_LIST list,uint32_t *Vendor_Id,uint32_t *Experimental_Result_Code,AAA_AVP **avp_ptr);
int base.get_Failed_AVP(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int base.get_Firmware_Revision(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Host_IP_Address(AAA_AVP_LIST list,ip_address *data,AAA_AVP **avp_ptr);
int base.get_Inband_Security_Id(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_MIP6_Agent_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int base.get_MIP6_Feature_Vector(AAA_AVP_LIST list,uint64_t *data,AAA_AVP **avp_ptr);
int base.get_MIP6_Home_Link_Prefix(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_MIP_Home_Agent_Address(AAA_AVP_LIST list,ip_address *data,AAA_AVP **avp_ptr);
int base.get_MIP_Home_Agent_Host(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int base.get_Multi_Round_Time_Out(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Origin_Host(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Origin_Realm(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Origin_State_Id(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Product_Name(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Proxy_Host(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Proxy_Info(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int base.get_Proxy_State(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Re_Auth_Request_Type(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int base.get_Redirect_Host(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Redirect_Host_Usage(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int base.get_Redirect_Max_Cache_Time(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Result_Code(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Route_Record(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Service_Selection(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Session_Binding(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Session_Id(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Session_Server_Failover(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int base.get_Session_Timeout(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Supported_Vendor_Id(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Termination_Cause(AAA_AVP_LIST list,int32_t *data,AAA_AVP **avp_ptr);
int base.get_User_Name(AAA_AVP_LIST list,str *data,AAA_AVP **avp_ptr);
int base.get_Vendor_Id(AAA_AVP_LIST list,uint32_t *data,AAA_AVP **avp_ptr);
int base.get_Vendor_Specific_Application_Id(AAA_AVP_LIST list,AAA_AVP_LIST *data,AAA_AVP **avp_ptr);
int base.get_Vendor_Specific_Application_Id_example(AAA_AVP_LIST list,uint32_t *vendor_id,uint32_t *auth_app_id,uint32_t *acct_app_id);
</programlisting></para>
    </section>
  </section>
</chapter>
